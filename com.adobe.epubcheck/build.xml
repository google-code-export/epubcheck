<?xml version="1.0" encoding="utf-8"?>

<project default="buildEpubChecker">
	
	<tstamp>
		<format property="ISO-TODAY" pattern="yyyy-MM-dd"/>
	</tstamp>
	
	<!-- <property name="version" value="${ISO-TODAY}"/> -->
	<property name="version" value="1.1"/>
	
	<!--project directories -->

	<property name="epubcheck.base.dir" value="./"/>
	<property name="src.dir" value="${epubcheck.base.dir}/src"/>
	<property name="build.dir" value="${epubcheck.base.dir}/bin"/>
	<property name="distribution.dir" value="${epubcheck.base.dir}/dist"/>
	
	<fileset dir="${epubcheck.base.dir}/lib" id="libs">
		<include name="jing.jar"/>
		<include name="saxon.jar"/>
		<include name="jigsaw.jar"/>
	</fileset>
		
	<path id="classpath">
		<dirset dir="${epubcheck.base.dir}">
			<include name="src/com/adobe/**"/>
		</dirset>
		<fileset refid="libs"/>
	</path>
	        	
	<target name="createDistributionDir">
		<mkdir dir="${distribution.dir}"/>
	</target>

	<target name="createBuildDir">
	  <mkdir dir="${build.dir}"/>
	  <mkdir dir="${build.dir}/META-INF"/>
	</target>
	
	<target name="removeClasses" description="Cleans up old class files so that the new ones can be built." depends="createBuildDir">
		<delete>
			<fileset dir="${build.dir}" includes="**/*.*"/>
		</delete>
	</target>
	
	<target name="compile" description="Compiles all src classes" depends="removeClasses">

		<javac 	srcdir="${epubcheck.base.dir}" 
				destdir="${build.dir}" 
 				source="1.4"
				classpathref="classpath"
				includes="**/*.*" 
				debug="true">
			<compilerarg value="-Xlint:unchecked"/>
		</javac>

		<!-- copy the resource files needed at runtime-->
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.*"/> 
				<exclude name="**/*.java"/>		
			</fileset>
		</copy>
	</target>

	<!--
	****************************
	*** binary epubcheck.jar ***
	****************************
	-->
	<target name="buildJar"
			description="Creates binary epubcheck.jar in the distribution folder"
			depends="compile,createDistributionDir">
		<mkdir dir="${distribution.dir}"/>

		<jar jarfile="${distribution.dir}/epubcheck-${version}.jar">
			<fileset dir="${build.dir}">
				<include name="com/**/*.*"/>
				<include name="org/**/*.*"/>
			</fileset>
			<metainf dir="${build.dir}/META-INF">
				<include name="services/**/*.*"/>
			</metainf>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
				<attribute name="Main-Class" value="com.adobe.epubcheck.tool.Checker"/>
				<attribute name="Class-Path" value="lib/jing.jar lib/saxon.jar lib/jigsaw.jar"/>
			</manifest>
		</jar>
	</target>
	

	<!--
	*******************************
	*** java binary zip ***
	*******************************
	-->
	<target name="buildBinZip"
		depends="buildJar"
		description="Build a zip including epubcheck.jar and 3d party dependencies in ./lib/*.jar"
		>	
		<delete file="${distribution.dir}/epubcheck-${version}.zip"/>
		<zip zipfile="${distribution.dir}/epubcheck-${version}.zip">			
			<fileset dir="${distribution.dir}">
				<include name="epubcheck-${version}.jar"/>
			</fileset>
			<fileset dir="${epubcheck.base.dir}">
			    <include name="lib/*.jar"/>
				<include name="*.txt"/> 
			</fileset>
		</zip>		
	</target>
	
	<!-- 
	*******************************
	*** java source zip package ***
	*******************************
	-->
	<target name="buildSrcZip" 
			depends="createDistributionDir"
			description="Creates a epubcheck_src_${version}.zip with *.java files in the distribution folder">

		<zip zipfile="${distribution.dir}/epubcheck-src-${version}.zip" >
			<fileset dir="${epubcheck.base.dir}" includes="**/*.*" excludes="dist/**/*.* bin/**/*.*"/>
		</zip>
	</target>
	
	<!-- 
	********************
	*** All Packages ***
	********************
	-->
	<target name="buildEpubChecker"
			description="Creates binary jar zip and source zip"
			depends="buildSrcZip,
					 buildBinZip
					"/>

</project>
